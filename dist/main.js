(()=>{"use strict";function e(e){const t=document.querySelector(".project-list");return t.textContent="",e.forEach((e=>{const o=document.createElement("div");o.classList.add("new-project-con");const c=document.createElement("p");c.classList.add("project-title"),c.textContent=e.title,o.appendChild(c),o.appendChild(n()),t.appendChild(o)})),t}function t(e){const t=document.querySelector(".project-task-list");c(),e.forEach((e=>{const o=document.createElement("div");o.classList.add("project-task");const c=document.createElement("div");c.classList.add("project-task-left");const d=document.createElement("div");d.classList.add("checkbox");const r=document.createElement("p");r.classList.add("project-task-desc"),r.textContent=e,c.appendChild(d),c.appendChild(r),o.appendChild(c),o.appendChild(n());const l=document.querySelector(".add-task");return t.insertBefore(o,l)}))}function o(e){c(),document.querySelector(".main-hd").textContent=e.title,document.querySelector(".main-hd-desc").textContent=e.description,document.querySelector(".main-hd-date-user").textContent=e.dueDate;const t=document.querySelector(".main-hd-priority-user");t.textContent=e.priority,t.style.color=function(e){return"Low"===e?"green":"Medium"===e?"yellow":"red"}(e.priority);for(const t of document.querySelectorAll(".project-title"))t.textContent.includes(e.title)?(t.setAttribute("style","color: white; opacity: 1;"),t.parentElement.style.backgroundColor="rgba(255, 255, 255, 0.296)"):(t.setAttribute("style","color: #EBEBEB; opacity: .5;"),t.parentElement.style.background="none")}function n(){const e=document.createElement("div");e.classList.add("project-btn");const t=document.createElement("span"),o=document.createElement("span");return t.classList.add("material-icons-outlined"),t.classList.add("edit"),o.classList.add("material-icons-outlined"),o.classList.add("delete"),t.textContent="edit",o.textContent="delete",e.appendChild(t),e.appendChild(o),e}function c(){const e=document.querySelector(".project-task-list"),t=document.querySelectorAll(".project-task");for(let o=0;o<t.length;o++)e.removeChild(document.querySelector(".project-task"));return e}let d=[];let r=[];document.querySelector(".add-project").addEventListener("click",(()=>{!function(){const e=document.querySelector(".project-modal");e.showModal(),document.querySelector(".project-close").addEventListener("click",(()=>{e.close()}))}()})),function(){const t=document.querySelector(".project-form"),n=document.querySelector(".project-modal");t.addEventListener("submit",(c=>{c.preventDefault();const r=document.getElementById("title"),l=document.getElementById("description"),s=document.getElementById("due-date");let i="Low";document.querySelector(".project-modal #medium").checked?i="Medium":document.querySelector(".project-modal #high").checked&&(i="High");const u=((e,t,o,n)=>({title:e,description:t,dueDate:o,priority:n}))(r.value,l.value,s.value,i);return d.push(u),e(d),o(u),n.close(),t.reset(),d}))}(),function(){const e=document.querySelector(".task-form"),o=document.querySelector(".task-modal"),n=document.querySelector(".main-hd");e.addEventListener("submit",(c=>{c.preventDefault();const d=document.getElementById("task-description");if(function(e){if(0===r.length)return!1;for(let t=0;t<r.length;t++)if(r[t].project===e)return!0}(n.textContent)){const e=r.findIndex((e=>e.project===n.textContent));r[e].description.push(d.value),t(r[e].description)}else{const e=((e,t)=>({project:e,description:t}))(n.textContent,[d.value]);r.push(e);const o=r.findIndex((e=>e.project===n.textContent));t(r[o].description)}return o.close(),e.reset(),r}))}(),document.querySelectorAll(".project-list").forEach((e=>{e.addEventListener("click",(e=>{let n="";n="project-title"===e.target.classList.value||"new-project-con"===e.target.classList.value?e.target.childNodes[0].textContent:e.target.parentElement.parentElement.childNodes[0].textContent;const c=d.findIndex((e=>e.title===n));o(d[c]);const l=r.findIndex((e=>e.project===n));-1!==l&&t(r[l].description)}))})),document.querySelectorAll(".project-list").forEach((t=>{t.addEventListener("click",(t=>{if("material-icons-outlined edit"===t.target.classList.value){const n=t.target.parentElement.parentElement.childNodes[0].textContent,c=d.findIndex((e=>e.title===n));!function(){const e=document.querySelector(".edit-modal");e.showModal(),document.querySelector(".edit-close").addEventListener("click",(()=>{e.close()}))}(),function(t){const n=document.querySelector(".edit-form"),c=document.querySelector(".edit-modal");n.addEventListener("submit",(r=>{r.preventDefault();const l=document.getElementById("edit-title");d[t].title=l.value;const s=document.getElementById("edit-description");d[t].description=s.value;const i=document.getElementById("edit-due-date");d[t].dueDate=i.value;let u="Low";return document.querySelector(".edit-modal #medium").checked?u="Medium":document.querySelector(".edit-modal #high").checked&&(u="High"),d[t].priority=u,console.log("project-module"),console.log(d),e(d),o(d[t]),c.close(),n.reset(),d}),{once:!0})}(c),console.log("index module"),console.log(d),console.log(d[c])}}))})),document.querySelector(".add-task").addEventListener("click",(()=>{!function(){const e=document.querySelector(".task-modal");e.showModal(),document.querySelector(".task-close").addEventListener("click",(t=>{e.close()}))}()})),document.querySelector(".completed-tab").addEventListener("click",(e=>{const t=e.target.innerText;var o;o=t,document.querySelector(".completed-tab .material-icons-outlined").innerText="Completed\nexpand_more"===o||"expand_more"===o?"expand_less":"expand_more",function(e){const t=document.querySelector(".completed-list");"Completed\nexpand_more"===e||"expand_more"===e?(document.querySelectorAll(".user-project").forEach((e=>{e.addEventListener("mouseover",(()=>{e.setAttribute("style","background-color: rgba(255, 255, 255, 0.296); border-radius: 5px;")})),e.addEventListener("mouseout",(()=>{e.style.background="none"}))})),t.classList.remove("hidden")):t.classList.add("hidden")}(t)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,