(()=>{"use strict";let e=[];const t=(e,t,o,n)=>({title:e,desc:t,dueDate:o,priority:n});function o(e){const t=document.createElement("div");t.classList.add("new-project-con");const o=document.createElement("p");return o.classList.add("project-title"),o.textContent=e.title,t.appendChild(o),t.appendChild(function(){const e=document.createElement("div");e.classList.add("project-btn");const t=document.createElement("span");t.classList.add("material-icons-outlined"),t.classList.add("edit"),t.textContent="edit",e.appendChild(t);const o=document.createElement("span");return o.classList.add("material-icons-outlined"),o.classList.add("delete"),o.textContent="delete",e.appendChild(o),e}()),t}document.querySelector(".add-project").addEventListener("click",(()=>{!function(){const n=document.querySelector(".project-form"),c=document.querySelector(".project-modal");c.showModal(),function(){const n=document.querySelector(".project-modal"),c=document.querySelector(".project-form");c.addEventListener("submit",(d=>{d.preventDefault();const r=document.getElementById("title"),l=document.getElementById("description"),i=document.getElementById("due-date");let u="Low";document.querySelector(".project-modal #medium").checked?u="Medium":document.querySelector(".project-modal #high").checked&&(u="High");const s=t(r.value,l.value,i.value,u);e.push(s),function(e){const t=document.querySelector(".project-list");t.textContent="";for(let n=0;n<e.length;n++)t.appendChild(o(e[n]))}(e),function(e){document.querySelector(".main-hd").textContent=e.title,document.querySelector(".main-hd-desc").textContent=e.desc,document.querySelector(".main-hd-date-user").textContent=e.dueDate;const t=document.querySelector(".main-hd-priority-user");var o;t.textContent=e.priority,t.style.color="Low"===(o=e.priority)?"green":"Medium"===o?"yellow":"red"}(s),n.close(),HTMLFormElement.prototype.reset.call(c)}),{once:!0})}(),document.querySelector(".project-close").addEventListener("click",(()=>{c.close(),HTMLFormElement.prototype.reset.call(n)}))}()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,