(()=>{"use strict";function e(e){const t=document.querySelector(".project-list");return t.textContent="",e.forEach((e=>{const n=document.createElement("div");n.classList.add("new-project-con");const o=document.createElement("p");o.classList.add("project-title"),o.textContent=e.title,n.appendChild(o),n.appendChild(c()),t.appendChild(n)})),t}function t(e){const t=document.querySelector(".project-task-list");r(),e.forEach((e=>{const n=document.createElement("div");n.classList.add("project-task");const o=document.createElement("div");o.classList.add("project-task-left");const r=document.createElement("div");r.classList.add("checkbox");const d=document.createElement("p");d.classList.add("project-task-desc"),d.textContent=e,o.appendChild(r),o.appendChild(d),n.appendChild(o),n.appendChild(c());const l=document.querySelector(".add-task");return t.insertBefore(n,l)}))}function n(e){r(),document.querySelector(".main-hd").textContent=e.title,document.querySelector(".main-hd-desc").textContent=e.description,document.querySelector(".main-hd-date-user").textContent=e.dueDate;const t=document.querySelector(".main-hd-priority-user");t.textContent=e.priority,t.style.color=o(e.priority);for(const t of document.querySelectorAll(".project-title"))t.textContent.includes(e.title)?(t.setAttribute("style","color: white; opacity: 1;"),t.parentElement.style.backgroundColor="rgba(255, 255, 255, 0.296)"):(t.setAttribute("style","color: #EBEBEB; opacity: .5;"),t.parentElement.style.background="none")}function o(e){return"Low"===e?"green":"Medium"===e?"yellow":"red"}function c(){const e=document.createElement("div");e.classList.add("project-btn");const t=document.createElement("span"),n=document.createElement("span");return t.classList.add("material-icons-outlined"),t.classList.add("edit"),n.classList.add("material-icons-outlined"),n.classList.add("delete"),t.textContent="edit",n.textContent="delete",e.appendChild(t),e.appendChild(n),e}function r(){const e=document.querySelector(".project-task-list"),t=document.querySelectorAll(".project-task");for(let n=0;n<t.length;n++)e.removeChild(document.querySelector(".project-task"));return e}let d=[];let l=[];document.querySelector(".add-project").addEventListener("click",(()=>{!function(){const e=document.querySelector(".project-modal");e.showModal(),document.querySelector(".project-close").addEventListener("click",(()=>{e.close()}))}()})),function(){const t=document.querySelector(".project-form"),o=document.querySelector(".project-modal");t.addEventListener("submit",(c=>{c.preventDefault();const r=document.getElementById("title"),d=document.getElementById("description"),i=document.getElementById("due-date");let s="Low";document.querySelector(".project-modal #medium").checked?s="Medium":document.querySelector(".project-modal #high").checked&&(s="High");const u=((e,t,n,o)=>({title:e,description:t,dueDate:n,priority:o}))(r.value,d.value,i.value,s);return l.push(u),e(l),n(u),o.close(),t.reset(),l}))}(),function(){const e=document.querySelector(".task-form"),n=document.querySelector(".task-modal"),o=document.querySelector(".main-hd");e.addEventListener("submit",(c=>{c.preventDefault();const r=document.getElementById("task-description");if(function(e){if(0===d.length)return!1;for(let t=0;t<d.length;t++)if(d[t].project===e)return!0}(o.textContent)){const e=d.findIndex((e=>e.project===o.textContent));d[e].description.push(r.value),t(d[e].description)}else{const e=((e,t)=>({project:e,description:t}))(o.textContent,[r.value]);d.push(e);const n=d.findIndex((e=>e.project===o.textContent));t(d[n].description)}return n.close(),e.reset(),d}))}(),document.querySelectorAll(".project-list").forEach((e=>{e.addEventListener("click",(e=>{let o="";o="project-title"===e.target.classList.value||"new-project-con"===e.target.classList.value?e.target.childNodes[0].textContent:e.target.parentElement.parentElement.childNodes[0].textContent;const c=l.findIndex((e=>e.title===o));n(l[c]);const r=d.findIndex((e=>e.project===o));-1!==r&&t(d[r].description)}))})),document.querySelectorAll(".project-list").forEach((c=>{c.addEventListener("click",(c=>{if("material-icons-outlined edit"===c.target.classList.value){const o=c.target.parentElement.parentElement.childNodes[0].textContent,r=l.findIndex((e=>e.title===o));d.findIndex((e=>e.project===o)),!function(){const e=document.querySelector(".edit-modal");e.showModal(),document.querySelector(".edit-close").addEventListener("click",(()=>{e.close()}))}(),function(o){const c=document.querySelector(".edit-form"),r=document.querySelector(".edit-modal");c.addEventListener("submit",(i=>{i.preventDefault();const s=document.getElementById("edit-title");l[o].title=s.value;const u=document.getElementById("edit-description");l[o].description=u.value;const a=document.getElementById("edit-due-date");l[o].dueDate=a.value;let m="Low";var p,y;return document.querySelector(".edit-modal #medium").checked?m="Medium":document.querySelector(".edit-modal #high").checked&&(m="High"),l[o].priority=m,console.log("project-module"),console.log(l),e(l),n(l[o]),p=o,y=l[o].title,d[p].project=y,t(d[p].description),console.log(d[p]),r.close(),c.reset(),l}),{once:!0})}(r)}if("material-icons-outlined delete"===c.target.classList.value){const e=c.target.parentElement.parentElement.childNodes[0].textContent;r=l.findIndex((t=>t.title===e)),l.splice(r,1),document.querySelector(".project-list").removeChild(c.target.parentElement.parentElement),function(){if(0===l.length){const e=document.querySelector(".main-hd-con");return e.textContent="",e.style.paddingBottom="6.15rem",e}{document.querySelector(".main-hd").textContent=l[0].title,document.querySelector(".main-hd-desc").textContent=l[0].description,document.querySelector(".main-hd-date-user").textContent=l[0].dueDate;const e=document.querySelector(".main-hd-priority-user");e.textContent=l[0].priority,e.style.color=o(l[0].priority)}}()}var r}))})),document.querySelector(".add-task").addEventListener("click",(()=>{!function(){const e=document.querySelector(".task-modal");e.showModal(),document.querySelector(".task-close").addEventListener("click",(t=>{e.close()}))}()})),document.querySelector(".completed-tab").addEventListener("click",(e=>{const t=e.target.innerText;var n;n=t,document.querySelector(".completed-tab .material-icons-outlined").innerText="Completed\nexpand_more"===n||"expand_more"===n?"expand_less":"expand_more",function(e){const t=document.querySelector(".completed-list");"Completed\nexpand_more"===e||"expand_more"===e?(document.querySelectorAll(".user-project").forEach((e=>{e.addEventListener("mouseover",(()=>{e.setAttribute("style","background-color: rgba(255, 255, 255, 0.296); border-radius: 5px;")})),e.addEventListener("mouseout",(()=>{e.style.background="none"}))})),t.classList.remove("hidden")):t.classList.add("hidden")}(t)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,