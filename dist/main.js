(()=>{"use strict";let e=[];let t=[];document.querySelector(".add-project").addEventListener("click",(()=>{!function(){const e=document.querySelector(".project-modal");e.showModal(),document.querySelector(".project-close").addEventListener("click",(()=>{e.close()}))}()})),function(){const t=document.querySelector(".project-form"),n=document.querySelector(".project-modal");t.addEventListener("submit",(o=>{o.preventDefault();const c=document.getElementById("title"),d=document.getElementById("description"),r=document.getElementById("due-date");let l="Low";document.getElementById("medium").checked?l="Medium":document.getElementById("high").checked&&(l="High");const s=((e,t,n,o)=>({title:e,description:t,dueDate:n,priority:o}))(c.value,d.value,r.value,l);e.push(s),function(e){const t=document.querySelector(".project-list");t.textContent="",e.forEach((e=>{const n=document.createElement("div");n.classList.add("new-project-con");const o=document.createElement("p");o.classList.add("project-title"),o.textContent=e.title,n.appendChild(o),n.appendChild(function(){const e=document.createElement("div");e.classList.add("project-btn");const t=document.createElement("span"),n=document.createElement("span");return t.classList.add("material-icons-outlined"),t.classList.add("edit"),n.classList.add("material-icons-outlined"),n.classList.add("delete"),t.textContent="edit",n.textContent="delete",e.appendChild(t),e.appendChild(n),e}()),t.appendChild(n)}))}(e),function(e){document.querySelector(".main-hd").textContent=e.title,document.querySelector(".main-hd-desc").textContent=e.description,document.querySelector(".main-hd-date-user").textContent=e.dueDate;const t=document.querySelector(".main-hd-priority-user");t.textContent=e.priority,t.style.color=function(e){return"Low"===e?"green":"Medium"===e?"yellow":"red"}(e.priority)}(s),n.close(),t.reset(),console.log(e)}))}(),function(){const e=document.querySelector(".task-form"),n=document.querySelector(".task-modal"),o=document.querySelector(".main-hd");e.addEventListener("submit",(c=>{c.preventDefault();const d=document.getElementById("task-description");if(function(e){if(0===t.length)return!1;for(let n=0;n<t.length;n++)if(t[n].project===e)return!0}(o.textContent)){const e=t.findIndex((e=>e.project===o.textContent));t[e].description.push(d.value)}else{const e=((e,t)=>({project:e,description:t}))(o.textContent,[d.value]);t.push(e)}n.close(),e.reset(),console.log(t),console.log(t[0].description)}))}(),document.querySelector(".add-task").addEventListener("click",(()=>{!function(){const e=document.querySelector(".task-modal");e.showModal(),document.querySelector(".task-close").addEventListener("click",(t=>{e.close()}))}()})),document.querySelector(".completed-tab").addEventListener("click",(e=>{const t=e.target.innerText;var n;n=t,document.querySelector(".completed-tab .material-icons-outlined").innerText="Completed\nexpand_more"===n||"expand_more"===n?"expand_less":"expand_more",function(e){const t=document.querySelector(".completed-list");"Completed\nexpand_more"===e||"expand_more"===e?(document.querySelectorAll(".user-project").forEach((e=>{e.addEventListener("mouseover",(()=>{e.setAttribute("style","background-color: rgba(255, 255, 255, 0.296); border-radius: 5px;")})),e.addEventListener("mouseout",(()=>{e.style.background="none"}))})),t.classList.remove("hidden")):t.classList.add("hidden")}(t)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,